{"version":3,"file":"image-crop.service.js","sourceRoot":"","sources":["../../../src/image-crop.service.ts"],"names":[],"mappings":"OAAO,EAAE,UAAU,EAAS,MAAM,eAAe;AAGjD;IAAA;IAuBA,CAAC;IArBO,+BAAI,GAAX,UAAa,KAAuB,EAAE,MAAkB,EAAE,MAAkB,EAAE,CAAS,EAAE,CAAS;QAA5D,sBAAkB,GAAlB,UAAkB;QAAE,sBAAkB,GAAlB,UAAkB;QAC3E,MAAM,CAAC,IAAI,OAAO,CAAE,UAAU,OAAY,EAAE,MAAW;YACtD,IAAI,GAAG,GAAsB,QAAQ,CAAC,aAAa,CAAE,QAAQ,CAAC,CAAC;YAC/D,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;YACd,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;YACf,IAAI,GAAG,GAA8B,GAAG,CAAC,UAAU,CAAE,IAAI,CAAC,CAAC;YAC3D,GAAG,CAAC,SAAS,CAAC,KAAK,EAAC,MAAM,EAAC,MAAM,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAC/C,IAAI,GAAG,GAAW,GAAG,CAAC,SAAS,EAAG,CAAC;YACnC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACT,OAAO,CAAC,GAAG,CAAC,CAAC;YACd,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,MAAM,CAAC,OAAO,CAAC,CAAC;YACjB,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IACK,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,+BAAc,GAA6D,EACjF,CAAC;IACF,uBAAC;AAAD,CAAC,AAvBD,IAuBC","sourcesContent":["import { Injectable, Inject} from '@angular/core';\n\n\nexport class ImageCropService {\n\n\tpublic crop (image: HTMLImageElement, startx: number = 0, starty: number = 0, w: number, h: number): Promise<string> {\t\t\n\t\treturn new Promise (function (resolve: any, reject: any): void {\n\t\t\tlet cvs: HTMLCanvasElement = document.createElement ('canvas');\n\t\t\tcvs.width = w;\n\t\t\tcvs.height = h;\n\t\t\tlet ctx: CanvasRenderingContext2D  = cvs.getContext ('2d');\n\t\t\tctx.drawImage(image,startx,starty,w,h,0,0,w,h);\n\t\t\tlet b64: string = cvs.toDataURL ();\n\t\t\tif (b64) {\n\t\t\t\tresolve(b64);\n\t\t\t} else {\n\t\t\t\treject('Error');\n\t\t\t}\n\t\t});\n\t}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}